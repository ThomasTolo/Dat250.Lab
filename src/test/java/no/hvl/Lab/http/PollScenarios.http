@host = http://localhost:8080

@u1Id = 2fed906b-52ad-428d-b9d3-baadcb415608
@u2Id = 7f863d4d-62a4-418b-8607-bd9f340177f4
@pollId = 8d51756d-407d-4da8-9ab6-22082d798ab8
@redOptionId = 8fe97594-64b4-4009-940c-0e036e4c37d8
@blueOptionId = 88a9dae3-0797-462b-8b94-8b98a106f1c4

#Source: https://www.rfc-editor.org/rfc/rfc9110.html
# https://learn.microsoft.com/en-us/aspnet/core/test/http-files?view=aspnetcore-9.0


############################################################
# STEP 1 — Create user 1
# Captures: {{u1Id}}
############################################################
# @name createUser1
POST {{host}}/api/users
Content-Type: application/json

{
  "username": "u1",
  "password": "pw1",
  "email": "u1@example.com"
}

> {% client.global.set("u1Id", JSON.parse(response.body).id); %}

###
# List users (should include user 1)
GET {{host}}/api/users


# STEP 2 — Create user 2
# Captures: {{u2Id}}
# @name createUser2
POST {{host}}/api/users
Content-Type: application/json

{
  "username": "u2",
  "password": "pw2",
  "email": "u2@example.com"
}

> {% client.global.set("u2Id", JSON.parse(response.body).id); %}

###
# List users (should include two users)
GET {{host}}/api/users


############################################################
# STEP 3 — User 1 creates a poll (public)
# Captures: {{pollId}}, {{redOptionId}}, {{blueOptionId}}
############################################################
# @name createPoll
POST {{host}}/api/polls?userId={{u1Id}}
Content-Type: application/json

{
  "creatorUserId": "{{u1Id}}",
  "question": "Your favorite color?",
  "publicPoll": true,
  "publishedAt": "2025-01-01T00:00:00.000Z",
  "validUntil": "2026-01-01T00:00:00.000Z",
  "options": [
    { "caption": "Red",   "presentationOrder": 1 },
    { "caption": "Blue",  "presentationOrder": 2 },
    { "caption": "Green", "presentationOrder": 3 }
  ]
}
> {%
  const body = JSON.parse(response.body);
  client.global.set("pollId", body.id);
  client.global.set("redOptionId", body.options.find(o => o.caption === "Red").id);
  client.global.set("blueOptionId", body.options.find(o => o.caption === "Blue").id);
  client.global.set("greenOptionId", body.options.find(o => o.caption === "Green").id);
%}


###
# List polls (should show the new poll)
GET {{host}}/api/polls



############################################################
# STEP 4 — User 2 votes (Red)
############################################################
POST {{host}}/api/polls/{{pollId}}/votes
Content-Type: application/json

{
  "optionId": "{{redOptionId}}",
  "voterUserId": "{{u2Id}}",
  "anonymous": false
}

############################################################
# STEP 5 — User 2 changes vote (to Blue)
############################################################
POST {{host}}/api/polls/{{pollId}}/votes
Content-Type: application/json

{
  "optionId": "{{blueOptionId}}",
  "voterUserId": "{{u2Id}}",
  "anonymous": false
}

############################################################
# STEP 6 — List votes (should show the most recent vote for User 2)
############################################################
GET {{host}}/api/polls/{{pollId}}/votes


############################################################
# STEP 7 — Delete the poll
############################################################
DELETE {{host}}/api/polls/{{pollId}}

############################################################
# STEP 8 — List votes again (should be empty [])
############################################################
GET {{host}}/api/polls/{{pollId}}/votes
