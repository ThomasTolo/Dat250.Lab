@host = http://localhost:8080

@u1Id = e693e407-ecd3-49e9-bd45-d4115b1fc980
@u2Id = 7f863d4d-62a4-418b-8607-bd9f340177f4
@pollId = 1cf53506-eddc-452c-b3bb-31f2ea541bb3
@redOptionId = 08ea2d21-3895-429c-ae60-3ff975d55a51
@blueOptionId = a26496f7-240e-4c95-b5a0-dce00108fab8

############################################################
# STEP 1 — Create user 1
# Captures: {{u1Id}}
############################################################
# @name createUser1
POST {{host}}/api/users
Content-Type: application/json

{
  "username": "u1",
  "password": "pw1",
  "email": "u1@example.com"
}

> {% client.global.set("u1Id", JSON.parse(response.body).id); %}

###
# List users (should include user 1)
GET {{host}}/api/users

############################################################
# STEP 2 — Create user 2
# Captures: {{u2Id}}
############################################################
# @name createUser2
POST {{host}}/api/users
Content-Type: application/json

{
  "username": "u2",
  "password": "pw2",
  "email": "u2@example.com"
}

> {% client.global.set("u2Id", JSON.parse(response.body).id); %}

###
# List users (should include two users)
GET {{host}}/api/users


############################################################
# STEP 3 — User 1 creates a poll (public)
# Captures: {{pollId}}, {{redOptionId}}, {{blueOptionId}}
############################################################
# @name createPoll
POST {{host}}/api/polls
Content-Type: application/json

{
  "creatorUserId": "{{u1Id}}",
  "question": "Your favorite color?",
  "publicPoll": true,
  "publishedAt": "2025-01-01T00:00:00Z",
  "validUntil": "2026-01-01T00:00:00Z",
  "options": [
    { "caption": "Red",   "presentationOrder": 1 },
    { "caption": "Blue",  "presentationOrder": 2 },
    { "caption": "Green", "presentationOrder": 3 }
  ]
}

> {%
  const body = JSON.parse(response.body);
  client.global.set("pollId", body.id);
  if (Array.isArray(body.options)) {
    const red  = body.options.find(o => o.caption === "Red");
    const blue = body.options.find(o => o.caption === "Blue");
    if (red)  client.global.set("redOptionId",  red.id);
    if (blue) client.global.set("blueOptionId", blue.id);
  }
%}

###
# List polls (should show the new poll)
GET {{host}}/api/polls



############################################################
# STEP 4 — User 2 votes (Red)
############################################################
POST {{host}}/api/polls/{{pollId}}/votes
Content-Type: application/json

{
  "optionId": "{{redOptionId}}",
  "voterUserId": "{{u2Id}}",
  "anonymous": false
}

############################################################
# STEP 5 — User 2 changes vote (to Blue)
############################################################
POST {{host}}/api/polls/{{pollId}}/votes
Content-Type: application/json

{
  "optionId": "{{blueOptionId}}",
  "voterUserId": "{{u2Id}}",
  "anonymous": false
}

############################################################
# STEP 6 — List votes (should show the most recent vote for User 2)
############################################################
GET {{host}}/api/polls/{{pollId}}/votes


############################################################
# STEP 7 — Delete the poll
############################################################
DELETE {{host}}/api/polls/{{pollId}}

############################################################
# STEP 8 — List votes again (should be empty [])
############################################################
GET {{host}}/api/polls/{{pollId}}/votes
